stage: scanning
Reservada: class linea: 0 columna: 0
id: Program linea: 0 columna 6
BRACE_A { linea: 0 columna: 14
Reservada: boolean linea: 1 columna: 4
id: entrada linea: 1 columna 12
SEMICOLON ; linea: 1 columna: 19
Reservada: int linea: 2 columna: 4
id: numeros linea: 2 columna 8
SEMICOLON ; linea: 2 columna: 15
Reservada: int linea: 4 columna: 4
id: suma linea: 4 columna 8
PAREN_A ( linea: 4 columna: 12
Reservada: int linea: 4 columna: 13
id: valor1 linea: 4 columna 17
COMMA , linea: 4 columna: 23
Reservada: int linea: 4 columna: 25
id: valor2 linea: 4 columna 29
PAREN_B ) linea: 4 columna: 35
BRACE_A { linea: 4 columna: 36
Reservada: int linea: 5 columna: 8
id: res linea: 5 columna 12
SEMICOLON ; linea: 5 columna: 15
id: res linea: 6 columna 8
ASSIGN = linea: 6 columna: 12
id: valor1 linea: 6 columna 14
ADD + linea: 6 columna: 21
id: valor2 linea: 6 columna 23
SEMICOLON ; linea: 6 columna: 29
Reservada: return linea: 7 columna: 8
id: res linea: 7 columna 15
SEMICOLON ; linea: 7 columna: 18
BRACE_B } linea: 8 columna: 4
Reservada: void linea: 9 columna: 4
id: main linea: 9 columna 9
PAREN_A ( linea: 9 columna: 13
PAREN_B ) linea: 9 columna: 14
BRACE_A { linea: 9 columna: 15
Reservada: int linea: 10 columna: 8
id: resultado1 linea: 10 columna 12
COMMA , linea: 10 columna: 22
id: resultado2 linea: 10 columna 24
SEMICOLON ; linea: 10 columna: 34
Reservada: boolean linea: 11 columna: 8
id: resultado3 linea: 11 columna 16
SEMICOLON ; linea: 11 columna: 26
id: entrada linea: 12 columna 8
ASSIGN = linea: 12 columna: 16
Reservada: true linea: 12 columna: 18
SEMICOLON ; linea: 12 columna: 22
Reservada: if linea: 14 columna: 8
PAREN_A ( linea: 14 columna: 11
id: entrada linea: 14 columna 12
EQUAL  == linea: 14 columna: 20
Reservada: true linea: 14 columna: 23
PAREN_B ) linea: 14 columna: 27
BRACE_A { linea: 14 columna: 28
id: resultado1 linea: 15 columna 12
ASSIGN = linea: 15 columna: 23
id: suma linea: 15 columna 25
PAREN_A ( linea: 15 columna: 29
int: 3 linea: 15 columna: 30
COMMA , linea: 15 columna: 31
int: 2 linea: 15 columna: 32
PAREN_B ) linea: 15 columna: 33
SEMICOLON ; linea: 15 columna: 34
BRACE_B } linea: 16 columna: 8
id: entrada linea: 17 columna 8
ASSIGN = linea: 17 columna: 16
Reservada: false linea: 17 columna: 18
SEMICOLON ; linea: 17 columna: 23
Reservada: if linea: 18 columna: 8
PAREN_A ( linea: 18 columna: 11
id: entrada linea: 18 columna 12
EQUAL  == linea: 18 columna: 20
Reservada: true linea: 18 columna: 23
PAREN_B ) linea: 18 columna: 27
BRACE_A { linea: 18 columna: 28
id: resultado1 linea: 19 columna 12
ASSIGN = linea: 19 columna: 23
id: resta linea: 19 columna 25
PAREN_A ( linea: 19 columna: 30
int: 3 linea: 19 columna: 31
COMMA , linea: 19 columna: 32
int: 2 linea: 19 columna: 33
PAREN_B ) linea: 19 columna: 34
SEMICOLON ; linea: 19 columna: 35
BRACE_B } linea: 20 columna: 8
BRACE_B } linea: 22 columna: 4
BRACE_B } linea: 23 columna: 0
