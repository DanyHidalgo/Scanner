stage: scanning
Reservada: class linea: 0 columna: 0
Reservada: Program linea: 0 columna: 6
BRACE_A { linea: 0 columna: 14
Reservada: boolean linea: 1 columna: 4
id: entrada linea: 1 columna 12
SEMICOLON ; linea: 1 columna: 19
Reservada: int linea: 2 columna: 4
id: numeros linea: 2 columna 8
SEMICOLON ; linea: 2 columna: 15
Reservada: int linea: 4 columna: 4
id: suma linea: 4 columna 8
PAREN_A ( linea: 4 columna: 12
Reservada: int linea: 4 columna: 13
id: valor1 linea: 4 columna 17
COMMA , linea: 4 columna: 23
Reservada: int linea: 4 columna: 25
id: valor2 linea: 4 columna 29
PAREN_B ) linea: 4 columna: 35
BRACE_A { linea: 4 columna: 36
Reservada: int linea: 5 columna: 8
Error: id no puede iniciar con numero: 2Res linea: 5 columna: 12
SEMICOLON ; linea: 5 columna: 16
Error: id no puede iniciar con numero: 5res linea: 6 columna: 8
ASSIGN = linea: 6 columna: 13
id: valor1 linea: 6 columna 15
ADD + linea: 6 columna: 22
id: valor2 linea: 6 columna 24
SEMICOLON ; linea: 6 columna: 30
Reservada: return linea: 7 columna: 8
id: res linea: 7 columna 15
SEMICOLON ; linea: 7 columna: 18
BRACE_B } linea: 8 columna: 4
Reservada: void linea: 15 columna: 4
id: main linea: 15 columna 9
PAREN_A ( linea: 15 columna: 13
PAREN_B ) linea: 15 columna: 14
BRACE_A { linea: 15 columna: 15
Reservada: int linea: 16 columna: 8
id: resultado1 linea: 16 columna 12
COMMA , linea: 16 columna: 22
id: resultado linea: 16 columna 24
Carácter desconocido @linea: 16columna: 33
Carácter desconocido @linea: 16columna: 34
int: 2 linea: 16 columna: 35
SEMICOLON ; linea: 16 columna: 36
Reservada: boolean linea: 17 columna: 8
id: resultado3 linea: 17 columna 16
SEMICOLON ; linea: 17 columna: 26
id: entrada linea: 18 columna 8
ASSIGN = linea: 18 columna: 16
Reservada: true linea: 18 columna: 18
SEMICOLON ; linea: 18 columna: 22
Reservada: if linea: 20 columna: 8
PAREN_A ( linea: 20 columna: 11
id: entrada linea: 20 columna 12
EQUAL  == linea: 20 columna: 20
Reservada: true linea: 20 columna: 23
PAREN_B ) linea: 20 columna: 27
BRACE_A { linea: 20 columna: 28
id: resultado1 linea: 21 columna 12
ASSIGN = linea: 21 columna: 23
id: suma linea: 21 columna 25
PAREN_A ( linea: 21 columna: 29
int: 3 linea: 21 columna: 30
COMMA , linea: 21 columna: 31
int: 2 linea: 21 columna: 32
PAREN_B ) linea: 21 columna: 33
SEMICOLON ; linea: 21 columna: 34
BRACE_B } linea: 22 columna: 8
id: entrada linea: 23 columna 8
ASSIGN = linea: 23 columna: 16
Reservada: false linea: 23 columna: 18
SEMICOLON ; linea: 23 columna: 23
Reservada: if linea: 24 columna: 8
PAREN_A ( linea: 24 columna: 11
id: entrada linea: 24 columna 12
EQUAL  == linea: 24 columna: 20
Reservada: true linea: 24 columna: 23
PAREN_B ) linea: 24 columna: 27
BRACE_A { linea: 24 columna: 28
id: resultado1 linea: 25 columna 12
ASSIGN = linea: 25 columna: 23
id: resta linea: 25 columna 25
PAREN_A ( linea: 25 columna: 30
int: 3 linea: 25 columna: 31
Carácter desconocido 'linea: 25columna: 32
COMMA , linea: 25 columna: 33
int: 2 linea: 25 columna: 34
PAREN_B ) linea: 25 columna: 35
SEMICOLON ; linea: 25 columna: 36
BRACE_B } linea: 26 columna: 8
BRACE_B } linea: 28 columna: 4
BRACE_B } linea: 29 columna: 0
