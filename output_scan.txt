stage: scanning
Token: CLASS | Valor: class | Línea: 2 | Columna: 2
Token: ID | Valor: Program | Línea: 2 | Columna: 8
Token: LBRACE | Valor: { | Línea: 2 | Columna: 16
Token: INT | Valor: int | Línea: 4 | Columna: 6
Token: ID | Valor: x | Línea: 4 | Columna: 10
Token: SEMI | Valor: ; | Línea: 4 | Columna: 11
Token: INT | Valor: int | Línea: 5 | Columna: 6
Token: ID | Valor: y | Línea: 5 | Columna: 10
Token: SEMI | Valor: ; | Línea: 5 | Columna: 11
Token: BOOLEAN | Valor: boolean | Línea: 6 | Columna: 6
Token: ID | Valor: flag | Línea: 6 | Columna: 14
Token: SEMI | Valor: ; | Línea: 6 | Columna: 18
Token: INT | Valor: int | Línea: 7 | Columna: 6
Token: ID | Valor: numbers | Línea: 7 | Columna: 10
Token: LBRACKET | Valor: [ | Línea: 7 | Columna: 17
Token: RBRACKET | Valor: ] | Línea: 7 | Columna: 18
Token: SEMI | Valor: ; | Línea: 7 | Columna: 19
Token: BOOLEAN | Valor: boolean | Línea: 8 | Columna: 6
Token: ID | Valor: flags | Línea: 8 | Columna: 14
Token: LBRACKET | Valor: [ | Línea: 8 | Columna: 19
Token: RBRACKET | Valor: ] | Línea: 8 | Columna: 20
Token: SEMI | Valor: ; | Línea: 8 | Columna: 21
Token: VOID | Valor: void | Línea: 10 | Columna: 6
Token: ID | Valor: main | Línea: 10 | Columna: 11
Token: LPAREN | Valor: ( | Línea: 10 | Columna: 15
Token: RPAREN | Valor: ) | Línea: 10 | Columna: 16
Token: LBRACE | Valor: { | Línea: 10 | Columna: 18
Token: ID | Valor: x | Línea: 12 | Columna: 10
Token: ASSIGN | Valor: = | Línea: 12 | Columna: 12
Token: INT_LITERAL | Valor: 10 | Línea: 12 | Columna: 14
Token: SEMI | Valor: ; | Línea: 12 | Columna: 16
Token: ID | Valor: y | Línea: 13 | Columna: 10
Token: ASSIGN | Valor: = | Línea: 13 | Columna: 12
Token: INT_LITERAL | Valor: 20 | Línea: 13 | Columna: 14
Token: SEMI | Valor: ; | Línea: 13 | Columna: 16
Token: ID | Valor: flag | Línea: 14 | Columna: 10
Token: ASSIGN | Valor: = | Línea: 14 | Columna: 15
Token: TRUE | Valor: true | Línea: 14 | Columna: 17
Token: SEMI | Valor: ; | Línea: 14 | Columna: 21
Token: ID | Valor: numbers | Línea: 17 | Columna: 10
Token: ASSIGN | Valor: = | Línea: 17 | Columna: 18
Token: NEW | Valor: new | Línea: 17 | Columna: 20
Token: INT | Valor: int | Línea: 17 | Columna: 24
Token: LBRACKET | Valor: [ | Línea: 17 | Columna: 27
Token: INT_LITERAL | Valor: 5 | Línea: 17 | Columna: 28
Token: RBRACKET | Valor: ] | Línea: 17 | Columna: 29
Token: SEMI | Valor: ; | Línea: 17 | Columna: 30
Token: ID | Valor: flags | Línea: 18 | Columna: 10
Token: ASSIGN | Valor: = | Línea: 18 | Columna: 16
Token: NEW | Valor: new | Línea: 18 | Columna: 18
Token: BOOLEAN | Valor: boolean | Línea: 18 | Columna: 22
Token: LBRACKET | Valor: [ | Línea: 18 | Columna: 29
Token: INT_LITERAL | Valor: 3 | Línea: 18 | Columna: 30
Token: RBRACKET | Valor: ] | Línea: 18 | Columna: 31
Token: SEMI | Valor: ; | Línea: 18 | Columna: 32
Token: ID | Valor: x | Línea: 21 | Columna: 10
Token: ASSIGN | Valor: = | Línea: 21 | Columna: 12
Token: ID | Valor: y | Línea: 21 | Columna: 14
Token: PLUS | Valor: + | Línea: 21 | Columna: 16
Token: INT_LITERAL | Valor: 1 | Línea: 21 | Columna: 18
Token: SEMI | Valor: ; | Línea: 21 | Columna: 19
Token: ID | Valor: y | Línea: 22 | Columna: 10
Token: ASSIGN | Valor: = | Línea: 22 | Columna: 12
Token: ID | Valor: x | Línea: 22 | Columna: 14
Token: TIMES | Valor: * | Línea: 22 | Columna: 16
Token: INT_LITERAL | Valor: 2 | Línea: 22 | Columna: 18
Token: SEMI | Valor: ; | Línea: 22 | Columna: 19
Token: ID | Valor: flag | Línea: 25 | Columna: 10
Token: ASSIGN | Valor: = | Línea: 25 | Columna: 15
Token: TRUE | Valor: true | Línea: 25 | Columna: 17
Token: AND | Valor: && | Línea: 25 | Columna: 22
Token: FALSE | Valor: false | Línea: 25 | Columna: 25
Token: SEMI | Valor: ; | Línea: 25 | Columna: 30
Token: ID | Valor: flag | Línea: 26 | Columna: 10
Token: ASSIGN | Valor: = | Línea: 26 | Columna: 15
Token: NOT | Valor: ! | Línea: 26 | Columna: 17
Token: ID | Valor: flag | Línea: 26 | Columna: 18
Token: SEMI | Valor: ; | Línea: 26 | Columna: 22
Token: ID | Valor: numbers | Línea: 29 | Columna: 10
Token: LBRACKET | Valor: [ | Línea: 29 | Columna: 17
Token: INT_LITERAL | Valor: 0 | Línea: 29 | Columna: 18
Token: RBRACKET | Valor: ] | Línea: 29 | Columna: 19
Token: ASSIGN | Valor: = | Línea: 29 | Columna: 21
Token: INT_LITERAL | Valor: 1 | Línea: 29 | Columna: 23
Token: SEMI | Valor: ; | Línea: 29 | Columna: 24
Token: ID | Valor: numbers | Línea: 30 | Columna: 10
Token: LBRACKET | Valor: [ | Línea: 30 | Columna: 17
Token: ID | Valor: x | Línea: 30 | Columna: 18
Token: MINUS | Valor: - | Línea: 30 | Columna: 20
Token: INT_LITERAL | Valor: 10 | Línea: 30 | Columna: 22
Token: RBRACKET | Valor: ] | Línea: 30 | Columna: 24
Token: ASSIGN | Valor: = | Línea: 30 | Columna: 26
Token: INT_LITERAL | Valor: 2 | Línea: 30 | Columna: 28
Token: SEMI | Valor: ; | Línea: 30 | Columna: 29
Token: ID | Valor: flags | Línea: 31 | Columna: 10
Token: LBRACKET | Valor: [ | Línea: 31 | Columna: 15
Token: INT_LITERAL | Valor: 0 | Línea: 31 | Columna: 16
Token: RBRACKET | Valor: ] | Línea: 31 | Columna: 17
Token: ASSIGN | Valor: = | Línea: 31 | Columna: 19
Token: TRUE | Valor: true | Línea: 31 | Columna: 21
Token: SEMI | Valor: ; | Línea: 31 | Columna: 25
Token: IF | Valor: if | Línea: 34 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 34 | Columna: 13
Token: ID | Valor: flag | Línea: 34 | Columna: 14
Token: RPAREN | Valor: ) | Línea: 34 | Columna: 18
Token: LBRACE | Valor: { | Línea: 34 | Columna: 20
Token: ID | Valor: x | Línea: 35 | Columna: 14
Token: ASSIGN | Valor: = | Línea: 35 | Columna: 16
Token: INT_LITERAL | Valor: 1 | Línea: 35 | Columna: 18
Token: SEMI | Valor: ; | Línea: 35 | Columna: 19
Token: RBRACE | Valor: } | Línea: 36 | Columna: 10
Token: IF | Valor: if | Línea: 38 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 38 | Columna: 13
Token: ID | Valor: x | Línea: 38 | Columna: 14
Token: EQ | Valor: == | Línea: 38 | Columna: 16
Token: ID | Valor: y | Línea: 38 | Columna: 19
Token: RPAREN | Valor: ) | Línea: 38 | Columna: 20
Token: LBRACE | Valor: { | Línea: 38 | Columna: 22
Token: ID | Valor: flag | Línea: 39 | Columna: 14
Token: ASSIGN | Valor: = | Línea: 39 | Columna: 19
Token: FALSE | Valor: false | Línea: 39 | Columna: 21
Token: SEMI | Valor: ; | Línea: 39 | Columna: 26
Token: RBRACE | Valor: } | Línea: 40 | Columna: 10
Token: IF | Valor: if | Línea: 42 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 42 | Columna: 13
Token: ID | Valor: flags | Línea: 42 | Columna: 14
Token: LBRACKET | Valor: [ | Línea: 42 | Columna: 19
Token: INT_LITERAL | Valor: 0 | Línea: 42 | Columna: 20
Token: RBRACKET | Valor: ] | Línea: 42 | Columna: 21
Token: AND | Valor: && | Línea: 42 | Columna: 23
Token: ID | Valor: flag | Línea: 42 | Columna: 26
Token: RPAREN | Valor: ) | Línea: 42 | Columna: 30
Token: LBRACE | Valor: { | Línea: 42 | Columna: 32
Token: ID | Valor: y | Línea: 43 | Columna: 14
Token: ASSIGN | Valor: = | Línea: 43 | Columna: 16
Token: INT_LITERAL | Valor: 2 | Línea: 43 | Columna: 18
Token: SEMI | Valor: ; | Línea: 43 | Columna: 19
Token: RBRACE | Valor: } | Línea: 44 | Columna: 10
Token: FOR | Valor: for | Línea: 47 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 47 | Columna: 14
Token: INT | Valor: int | Línea: 47 | Columna: 15
Token: ID | Valor: i | Línea: 47 | Columna: 19
Token: ASSIGN | Valor: = | Línea: 47 | Columna: 21
Token: INT_LITERAL | Valor: 0 | Línea: 47 | Columna: 23
Token: SEMI | Valor: ; | Línea: 47 | Columna: 24
Token: ID | Valor: i | Línea: 47 | Columna: 26
Token: LT | Valor: < | Línea: 47 | Columna: 28
Token: INT_LITERAL | Valor: 5 | Línea: 47 | Columna: 30
Token: SEMI | Valor: ; | Línea: 47 | Columna: 31
Token: ID | Valor: i | Línea: 47 | Columna: 33
Token: ASSIGN | Valor: = | Línea: 47 | Columna: 35
Token: ID | Valor: i | Línea: 47 | Columna: 37
Token: PLUS | Valor: + | Línea: 47 | Columna: 39
Token: INT_LITERAL | Valor: 1 | Línea: 47 | Columna: 41
Token: RPAREN | Valor: ) | Línea: 47 | Columna: 42
Token: LBRACE | Valor: { | Línea: 47 | Columna: 44
Token: ID | Valor: numbers | Línea: 48 | Columna: 14
Token: LBRACKET | Valor: [ | Línea: 48 | Columna: 21
Token: ID | Valor: i | Línea: 48 | Columna: 22
Token: RBRACKET | Valor: ] | Línea: 48 | Columna: 23
Token: ASSIGN | Valor: = | Línea: 48 | Columna: 25
Token: ID | Valor: i | Línea: 48 | Columna: 27
Token: TIMES | Valor: * | Línea: 48 | Columna: 29
Token: INT_LITERAL | Valor: 2 | Línea: 48 | Columna: 31
Token: SEMI | Valor: ; | Línea: 48 | Columna: 32
Token: IF | Valor: if | Línea: 49 | Columna: 14
Token: LPAREN | Valor: ( | Línea: 49 | Columna: 17
Token: ID | Valor: i | Línea: 49 | Columna: 18
Token: EQ | Valor: == | Línea: 49 | Columna: 20
Token: INT_LITERAL | Valor: 3 | Línea: 49 | Columna: 23
Token: RPAREN | Valor: ) | Línea: 49 | Columna: 24
Token: LBRACE | Valor: { | Línea: 49 | Columna: 26
Token: BREAK | Valor: break | Línea: 50 | Columna: 18
Token: SEMI | Valor: ; | Línea: 50 | Columna: 23
Token: RBRACE | Valor: } | Línea: 51 | Columna: 14
Token: IF | Valor: if | Línea: 52 | Columna: 14
Token: LPAREN | Valor: ( | Línea: 52 | Columna: 17
Token: ID | Valor: i | Línea: 52 | Columna: 18
Token: LT | Valor: < | Línea: 52 | Columna: 20
Token: INT_LITERAL | Valor: 2 | Línea: 52 | Columna: 22
Token: RPAREN | Valor: ) | Línea: 52 | Columna: 23
Token: LBRACE | Valor: { | Línea: 52 | Columna: 25
Token: CONTINUE | Valor: continue | Línea: 53 | Columna: 18
Token: SEMI | Valor: ; | Línea: 53 | Columna: 26
Token: RBRACE | Valor: } | Línea: 54 | Columna: 14
Token: ID | Valor: flags | Línea: 55 | Columna: 14
Token: LBRACKET | Valor: [ | Línea: 55 | Columna: 19
Token: INT_LITERAL | Valor: 0 | Línea: 55 | Columna: 20
Token: RBRACKET | Valor: ] | Línea: 55 | Columna: 21
Token: ASSIGN | Valor: = | Línea: 55 | Columna: 23
Token: TRUE | Valor: true | Línea: 55 | Columna: 25
Token: SEMI | Valor: ; | Línea: 55 | Columna: 29
Token: RBRACE | Valor: } | Línea: 56 | Columna: 10
Token: ID | Valor: calculateSum | Línea: 59 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 59 | Columna: 22
Token: INT_LITERAL | Valor: 10 | Línea: 59 | Columna: 23
Token: RPAREN | Valor: ) | Línea: 59 | Columna: 25
Token: SEMI | Valor: ; | Línea: 59 | Columna: 26
Token: ID | Valor: performOperations | Línea: 60 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 60 | Columna: 27
Token: ID | Valor: x | Línea: 60 | Columna: 28
Token: COMMA | Valor: , | Línea: 60 | Columna: 29
Token: ID | Valor: flag | Línea: 60 | Columna: 31
Token: RPAREN | Valor: ) | Línea: 60 | Columna: 35
Token: SEMI | Valor: ; | Línea: 60 | Columna: 36
Token: ID | Valor: flag | Línea: 61 | Columna: 10
Token: ASSIGN | Valor: = | Línea: 61 | Columna: 15
Token: ID | Valor: checkCondition | Línea: 61 | Columna: 17
Token: LPAREN | Valor: ( | Línea: 61 | Columna: 31
Token: ID | Valor: x | Línea: 61 | Columna: 32
Token: COMMA | Valor: , | Línea: 61 | Columna: 33
Token: ID | Valor: y | Línea: 61 | Columna: 35
Token: RPAREN | Valor: ) | Línea: 61 | Columna: 36
Token: SEMI | Valor: ; | Línea: 61 | Columna: 37
Token: RETURN | Valor: return | Línea: 63 | Columna: 10
Token: SEMI | Valor: ; | Línea: 63 | Columna: 16
Token: RBRACE | Valor: } | Línea: 64 | Columna: 6
Token: INT | Valor: int | Línea: 66 | Columna: 6
Token: ID | Valor: calculateSum | Línea: 66 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 66 | Columna: 22
Token: INT | Valor: int | Línea: 66 | Columna: 23
Token: ID | Valor: limit | Línea: 66 | Columna: 27
Token: RPAREN | Valor: ) | Línea: 66 | Columna: 32
Token: LBRACE | Valor: { | Línea: 66 | Columna: 34
Token: INT | Valor: int | Línea: 67 | Columna: 10
Token: ID | Valor: sum | Línea: 67 | Columna: 14
Token: SEMI | Valor: ; | Línea: 67 | Columna: 17
Token: ID | Valor: sum | Línea: 68 | Columna: 10
Token: ASSIGN | Valor: = | Línea: 68 | Columna: 14
Token: INT_LITERAL | Valor: 0 | Línea: 68 | Columna: 16
Token: SEMI | Valor: ; | Línea: 68 | Columna: 17
Token: FOR | Valor: for | Línea: 70 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 70 | Columna: 14
Token: INT | Valor: int | Línea: 70 | Columna: 15
Token: ID | Valor: i | Línea: 70 | Columna: 19
Token: ASSIGN | Valor: = | Línea: 70 | Columna: 21
Token: INT_LITERAL | Valor: 0 | Línea: 70 | Columna: 23
Token: SEMI | Valor: ; | Línea: 70 | Columna: 24
Token: ID | Valor: i | Línea: 70 | Columna: 26
Token: LT | Valor: < | Línea: 70 | Columna: 28
Token: ID | Valor: limit | Línea: 70 | Columna: 30
Token: SEMI | Valor: ; | Línea: 70 | Columna: 35
Token: ID | Valor: i | Línea: 70 | Columna: 37
Token: ASSIGN | Valor: = | Línea: 70 | Columna: 39
Token: ID | Valor: i | Línea: 70 | Columna: 41
Token: PLUS | Valor: + | Línea: 70 | Columna: 43
Token: INT_LITERAL | Valor: 1 | Línea: 70 | Columna: 45
Token: RPAREN | Valor: ) | Línea: 70 | Columna: 46
Token: LBRACE | Valor: { | Línea: 70 | Columna: 48
Token: ID | Valor: sum | Línea: 71 | Columna: 14
Token: ASSIGN | Valor: = | Línea: 71 | Columna: 18
Token: ID | Valor: sum | Línea: 71 | Columna: 20
Token: PLUS | Valor: + | Línea: 71 | Columna: 24
Token: ID | Valor: i | Línea: 71 | Columna: 26
Token: SEMI | Valor: ; | Línea: 71 | Columna: 27
Token: RBRACE | Valor: } | Línea: 72 | Columna: 10
Token: RETURN | Valor: return | Línea: 74 | Columna: 10
Token: ID | Valor: sum | Línea: 74 | Columna: 17
Token: SEMI | Valor: ; | Línea: 74 | Columna: 20
Token: RBRACE | Valor: } | Línea: 75 | Columna: 6
Token: VOID | Valor: void | Línea: 77 | Columna: 6
Token: ID | Valor: performOperations | Línea: 77 | Columna: 11
Token: LPAREN | Valor: ( | Línea: 77 | Columna: 28
Token: INT | Valor: int | Línea: 77 | Columna: 29
Token: ID | Valor: value | Línea: 77 | Columna: 33
Token: COMMA | Valor: , | Línea: 77 | Columna: 38
Token: BOOLEAN | Valor: boolean | Línea: 77 | Columna: 40
Token: ID | Valor: condition | Línea: 77 | Columna: 48
Token: RPAREN | Valor: ) | Línea: 77 | Columna: 57
Token: LBRACE | Valor: { | Línea: 77 | Columna: 59
Token: IF | Valor: if | Línea: 78 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 78 | Columna: 13
Token: ID | Valor: condition | Línea: 78 | Columna: 14
Token: RPAREN | Valor: ) | Línea: 78 | Columna: 23
Token: LBRACE | Valor: { | Línea: 78 | Columna: 25
Token: ID | Valor: value | Línea: 79 | Columna: 14
Token: ASSIGN | Valor: = | Línea: 79 | Columna: 20
Token: ID | Valor: value | Línea: 79 | Columna: 22
Token: TIMES | Valor: * | Línea: 79 | Columna: 28
Token: INT_LITERAL | Valor: 2 | Línea: 79 | Columna: 30
Token: SEMI | Valor: ; | Línea: 79 | Columna: 31
Token: RBRACE | Valor: } | Línea: 80 | Columna: 10
Token: RETURN | Valor: return | Línea: 82 | Columna: 10
Token: SEMI | Valor: ; | Línea: 82 | Columna: 16
Token: RBRACE | Valor: } | Línea: 83 | Columna: 6
Token: BOOLEAN | Valor: boolean | Línea: 85 | Columna: 6
Token: ID | Valor: checkCondition | Línea: 85 | Columna: 14
Token: LPAREN | Valor: ( | Línea: 85 | Columna: 28
Token: INT | Valor: int | Línea: 85 | Columna: 29
Token: ID | Valor: a | Línea: 85 | Columna: 33
Token: COMMA | Valor: , | Línea: 85 | Columna: 34
Token: INT | Valor: int | Línea: 85 | Columna: 36
Token: ID | Valor: b | Línea: 85 | Columna: 40
Token: RPAREN | Valor: ) | Línea: 85 | Columna: 41
Token: LBRACE | Valor: { | Línea: 85 | Columna: 43
Token: BOOLEAN | Valor: boolean | Línea: 86 | Columna: 10
Token: ID | Valor: result | Línea: 86 | Columna: 18
Token: SEMI | Valor: ; | Línea: 86 | Columna: 24
Token: IF | Valor: if | Línea: 88 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 88 | Columna: 13
Token: ID | Valor: a | Línea: 88 | Columna: 14
Token: GT | Valor: > | Línea: 88 | Columna: 16
Token: ID | Valor: b | Línea: 88 | Columna: 18
Token: RPAREN | Valor: ) | Línea: 88 | Columna: 19
Token: LBRACE | Valor: { | Línea: 88 | Columna: 21
Token: ID | Valor: result | Línea: 89 | Columna: 14
Token: ASSIGN | Valor: = | Línea: 89 | Columna: 21
Token: TRUE | Valor: true | Línea: 89 | Columna: 23
Token: SEMI | Valor: ; | Línea: 89 | Columna: 27
Token: RBRACE | Valor: } | Línea: 90 | Columna: 10
Token: ELSE | Valor: else | Línea: 90 | Columna: 12
Token: LBRACE | Valor: { | Línea: 90 | Columna: 17
Token: ID | Valor: result | Línea: 91 | Columna: 14
Token: ASSIGN | Valor: = | Línea: 91 | Columna: 21
Token: FALSE | Valor: false | Línea: 91 | Columna: 23
Token: SEMI | Valor: ; | Línea: 91 | Columna: 28
Token: RBRACE | Valor: } | Línea: 92 | Columna: 10
Token: RETURN | Valor: return | Línea: 94 | Columna: 10
Token: ID | Valor: result | Línea: 94 | Columna: 17
Token: SEMI | Valor: ; | Línea: 94 | Columna: 23
Token: RBRACE | Valor: } | Línea: 95 | Columna: 6
Token: INT | Valor: int | Línea: 97 | Columna: 6
Token: ID | Valor: factorial | Línea: 97 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 97 | Columna: 19
Token: INT | Valor: int | Línea: 97 | Columna: 20
Token: ID | Valor: n | Línea: 97 | Columna: 24
Token: RPAREN | Valor: ) | Línea: 97 | Columna: 25
Token: LBRACE | Valor: { | Línea: 97 | Columna: 27
Token: IF | Valor: if | Línea: 98 | Columna: 10
Token: LPAREN | Valor: ( | Línea: 98 | Columna: 13
Token: ID | Valor: n | Línea: 98 | Columna: 14
Token: LE | Valor: <= | Línea: 98 | Columna: 16
Token: INT_LITERAL | Valor: 1 | Línea: 98 | Columna: 19
Token: RPAREN | Valor: ) | Línea: 98 | Columna: 20
Token: LBRACE | Valor: { | Línea: 98 | Columna: 22
Token: RETURN | Valor: return | Línea: 99 | Columna: 14
Token: INT_LITERAL | Valor: 1 | Línea: 99 | Columna: 21
Token: SEMI | Valor: ; | Línea: 99 | Columna: 22
Token: RBRACE | Valor: } | Línea: 100 | Columna: 10
Token: RETURN | Valor: return | Línea: 101 | Columna: 10
Token: ID | Valor: n | Línea: 101 | Columna: 17
Token: TIMES | Valor: * | Línea: 101 | Columna: 19
Token: ID | Valor: factorial | Línea: 101 | Columna: 21
Token: LPAREN | Valor: ( | Línea: 101 | Columna: 30
Token: ID | Valor: n | Línea: 101 | Columna: 31
Token: MINUS | Valor: - | Línea: 101 | Columna: 33
Token: INT_LITERAL | Valor: 1 | Línea: 101 | Columna: 35
Token: RPAREN | Valor: ) | Línea: 101 | Columna: 36
Token: SEMI | Valor: ; | Línea: 101 | Columna: 37
Token: RBRACE | Valor: } | Línea: 102 | Columna: 6
Token: RBRACE | Valor: } | Línea: 103 | Columna: 2
