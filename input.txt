class Program {
    /* Declaración de variables principales */
    int x;
    int y;
    boolean flag;
    int numbers[];
    boolean flags[];
    
    void main() {
        /* Asignación inicial de valores */
        x = 10;
        y = 20;
        flag = true;
        
        /* Inicialización de arreglos */
        numbers = new int[5];
        flags = new boolean[3];
        
        /* Cálculos matemáticos */
        x = y + 1;
        y = x * 2;
        
        /* Operaciones con valores booleanos */
        flag = true && false;
        flag = !flag;
        
        /* Manipulación de arreglos */
        numbers[0] = 1;
        numbers[x - 10] = 2;
        flags[0] = true;
        
        /* Evaluaciones de condiciones */
        if (flag) {
            x = 1;
        }
        
        if (x == y) {
            flag = false;
        }
        
        if (flags[0] && flag) {
            y = 2;
        }
        
        /* Iteraciones */
        for (int i = 0; i < 5; i = i + 1) {
            numbers[i] = i * 2;
            if (i == 3) {
                break; // Declaración break válida dentro del bucle
            }
            if (i < 2) {
                continue; // Declaración continue válida dentro del bucle
            }
            flags[0] = true;
        }
        
        /* Invocaciones de funciones */
        calculateSum(10);
        performOperations(x, flag);
        flag = checkCondition(x, y);
        
        return;  // Retorno adecuado para un método void
    }
    
    int calculateSum(int limit) {
        int sum;
        sum = 0;
        
        for (int i = 0; i < limit; i = i + 1) {
            sum = sum + i;
        }
        
        return sum;  // Valor entero devuelto correctamente
    }
    
    void performOperations(int value, boolean condition) {
        if (condition) {
            value = value * 2;
        }
        
        return;  // Retorno adecuado para un método void
    }
    
    boolean checkCondition(int a, int b) {
        boolean result;
        
        if (a > b) {
            result = true;
        } else {
            result = false;
        }
        
        return result;  // Valor booleano devuelto correctamente
    }
    
    int factorial(int n) {
        if (n <= 1) {
            return 1;
        }
        return n * factorial(n - 1);  // Llamada recursiva válida
    }
}
